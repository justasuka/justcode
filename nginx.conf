
#user  nobody;
worker_processes 1;
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#pid        logs/nginx.pid;
events {
     worker_connections 1024;
}
http {
    include       mime.types;
    default_type  application/octet-stream;
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
    #access_log  logs/access.log  main;
     sendfile  on;
    #tcp_nopush     on;
    #keepalive_timeout  0;
     keepalive_timeout 65;
    #gzip  on;
    server {
        listen       20202;
        server_name  localhost 192.168.2.3 127.0.0.1 110.40.254.208;
        #access_log  logs/host.access.log  main;
		# 设置图片目录
        location /safety/ {
            root       c:;   # 路径“H:/www”下必须含有一个“imgs”目录
            autoindex  on;       # 如果为on，那么就发送请求地址对应的服务端路径下的文件列表给客户端
        }
		location / {
            root   html;
            index  index.html index.htm;
        }
		
        # 图片剪裁 crop
        # 按比例缩放 resize
        location ~* /imgs_thumb/?(.*)$ {
			charset 'utf-8';
            set $filename $1;
            set $img_w     $arg_width;
            set $img_h     $arg_height;
			#image_filter resize $img_w $img_h;
			rewrite  ^.+imgs_thumb/?(.*)$ /$1 break;
            proxy_pass  http://110.40.254.208:20203;    #node api server 即需要代理的IP地址
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			image_filter resize $img_w $img_h;
			image_filter_buffer 30M;
        }
        
		
		
        # 设置视频目录
        #location /videos {
        #    root       E:/www;
        #    autoindex  on;
        #}
		#location ~* \.(jpg|gif|png)$ {  
        #   image_filter resize 100 100;  
        #}  
        #error_page  404              /404.html;
        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}
        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}
        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;
    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
	server {
		listen        20203;
		server_name  localhost 127.0.0.1 192.168.2.3 110.40.254.208;
		root   "c:/safety";
		location / {
			index index.php index.html;
			error_page 400 /error/400.html;
			error_page 403 /error/403.html;
			error_page 404 /error/404.html;
			error_page 500 /error/500.html;
			error_page 501 /error/501.html;
			error_page 502 /error/502.html;
			error_page 503 /error/503.html;
			error_page 504 /error/504.html;
			error_page 505 /error/505.html;
			error_page 506 /error/506.html;
			error_page 507 /error/507.html;
			error_page 509 /error/509.html;
			error_page 510 /error/510.html;
			autoindex  off;
		}
		location ~ \.php(.*)$ {
			fastcgi_pass   127.0.0.1:9000;
			fastcgi_index  index.php;
			fastcgi_split_path_info  ^((?U).+\.php)(/?.+)$;
			fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
			fastcgi_param  PATH_INFO  $fastcgi_path_info;
			fastcgi_param  PATH_TRANSLATED  $document_root$fastcgi_path_info;
			include        fastcgi_params;
		}
	}
	

    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;
    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;
    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

     
     
}
